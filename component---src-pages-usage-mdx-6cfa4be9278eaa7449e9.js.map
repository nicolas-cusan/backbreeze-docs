{"version":3,"sources":["webpack:///./src/pages/usage.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","children","title","subline","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-usage-mdx-6cfa4be9278eaa7449e9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport MdxLayout from 'components/mdx-layout';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <MdxLayout title=\"Usage\" subline=\"Applying Backbreeze classes in your project.\">\n    {children}\n  </MdxLayout>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"using-the-backbreeze-classes\"\n    }}>{`Using the Backbreeze classes`}</h2>\n    <p>{`Backbreeze provides what is often called utility classes or atomic CSS. That means that it provides classes where each class applies one CSS property and one value for that property. To achieve complex styles what you need to do is combine classes together:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"c-white p-4 bg-black\">\n  <h3 class=\"fw-bold mb\">\n    My title\n  </h3>\n  <p class=\"o-0.5\">\n    Subtitle goes here\n  </p>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"responsive-and-mobile-first\"\n    }}>{`Responsive and mobile first`}</h2>\n    <p>{`Almost all Backbreeze generated classes are responsive (all can be made responsive via configuration if needed), that means they provide variants to change styles across breakpoints.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"c-white c-black@sm\">\n  This text will be white on mobile and black starting at the breakpoint \\`sm\\`\n</div>\n`}</code></pre>\n    <p>{`All Backbreeze media queries use `}<inlineCode parentName=\"p\">{`(min-width: ...)`}</inlineCode>{` exclusively, therefor a regular Backbreeze class style (a class without a `}<inlineCode parentName=\"p\">{`@`}</inlineCode>{` screen size modifier) will always be applied unless overwritten by a `}<inlineCode parentName=\"p\">{`@`}</inlineCode>{` class for a larger screen size. This approach is called mobile first. Create styles for mobile devices and modify them as needed when the screen gets wider.`}</p>\n    <h2 {...{\n      \"id\": \"reset-stylesheet\"\n    }}>{`Reset stylesheet`}</h2>\n    <p>{`It is recommended to use a reset style sheet of some kind, that can be `}<a parentName=\"p\" {...{\n        \"href\": \"https://necolas.github.io/normalize.css/\"\n      }}>{`normalize.css`}</a>{` or (shameless plug ahead) `}<a parentName=\"p\" {...{\n        \"href\": \"https://nicolas-cusan.github.io/destyle.css/\"\n      }}>{`destyle.css`}</a>{` which is well suited to for a utility approach to styling as it removes all browser default styles, this way classes are only `}<em parentName=\"p\">{`additive`}</em>{` and do not have to be used to remove styles.`}</p>\n    <h2 {...{\n      \"id\": \"class-name-structure\"\n    }}>{`Class name structure`}</h2>\n    <p>{`Backbreeze class names are generated using the following pattern:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`.[-][<NAMESPACE>-]<PROPERTY NAME>-<VALUE>[:<PSEUDO>][@<BREAKPOINT>]\n`}</code></pre>\n    <p>{`Pattern break down:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`[-]`}</inlineCode>{` Classes with negative values start with a `}<inlineCode parentName=\"li\">{`-`}</inlineCode>{` (dash)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`[<NAMESPACE>-]`}</inlineCode>{` Namespace to distinguish Backbreeze classes from others, it is set via `}<a parentName=\"li\" {...{\n          \"href\": \"/configuration/#bb-namespace\"\n        }}><inlineCode parentName=\"a\">{`$bb-namespace`}</inlineCode></a>{`. There is no namespace set by default`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<PROPERTY NAME>`}</inlineCode>{` Name that describes the property the class is setting. More frequently used properties will have shorter names e.g. a single letter, more infrequently used properties have longer names. In general class names try to be short but not to clever to make guessing a class name easy. e.g. `}<inlineCode parentName=\"li\">{`ta`}</inlineCode>{` (for `}<inlineCode parentName=\"li\">{`text-align`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<VALUE>`}</inlineCode>{` Property value set via the key in the values variable for this utility e.g. `}<inlineCode parentName=\"li\">{`center`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`[:<PSEUDO>]`}</inlineCode>{` Activation of the property on this pseudo selector e.g. `}<inlineCode parentName=\"li\">{`:hover`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`:focus`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`[@<BREAKPOINT>]`}</inlineCode>{` Breakpoint on which to apply this class e.g. `}<inlineCode parentName=\"li\">{`@sm`}</inlineCode>{` (from `}<inlineCode parentName=\"li\">{`sm`}</inlineCode>{` screens upwards, set via `}<a parentName=\"li\" {...{\n          \"href\": \"/configuration/#bb-bps\"\n        }}><inlineCode parentName=\"a\">{`$bb-bps`}</inlineCode></a>{`)`}</li>\n    </ul>\n    <p>{`Example (without namespace)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"p-20 p-40@sm -mb-30\">\n  <h2 class=\"fs-20 lh-1.2\">\n    <a class=\"c-primary:hover@md\" href=\"#\">\n      John Smith\n    </a>\n  </h2>\n</div>\n`}</code></pre>\n    <p>{`Example breakdown:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`<div>`}</inlineCode></strong><ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`p-20`}</inlineCode>{`: add a padding of `}<inlineCode parentName=\"li\">{`20px`}</inlineCode>{` all around`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`p-40@sm`}</inlineCode>{`: change the padding to `}<inlineCode parentName=\"li\">{`40px`}</inlineCode>{` from `}<inlineCode parentName=\"li\">{`sm`}</inlineCode>{` screens upwards`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`-mb-30`}</inlineCode>{`: add a negative margin of `}<inlineCode parentName=\"li\">{`30px`}</inlineCode>{` on the bottom`}<ul parentName=\"li\">\n              <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`<h2>`}</inlineCode></strong><ul parentName=\"li\">\n                  <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fs-20`}</inlineCode>{`: set the the font size to `}<inlineCode parentName=\"li\">{`20px`}</inlineCode></li>\n                  <li parentName=\"ul\"><inlineCode parentName=\"li\">{`lh-1.2`}</inlineCode>{`: set the line height to `}<inlineCode parentName=\"li\">{`1.2`}</inlineCode><ul parentName=\"li\">\n                      <li parentName=\"ul\"><strong parentName=\"li\"><inlineCode parentName=\"strong\">{`<a>`}</inlineCode></strong><ul parentName=\"li\">\n                          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`c-primary:hover@md`}</inlineCode>{`: change the color when hovered from `}<inlineCode parentName=\"li\">{`md`}</inlineCode>{` screens upwards`}</li>\n                        </ul></li>\n                    </ul></li>\n                </ul></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"using-backbreeze-variables-in-your-code\"\n    }}>{`Using Backbreeze variables in your code`}</h2>\n    <p>{`As everything is just Sass you can use all variables / values via the regular sass mechanisms:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// Using some color in a module\n.my-module {\n  color: map-get($bb-color, 'primary');\n}\n`}</code></pre>\n    <p>{`You can also use your own variables to define Backbreeze values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`$primary: #4a90e2;\n\n// Use color in Backbreeze classes\n$bb-color-values: (\n  'primary': $primary,\n  // ...,,\n);\n\n// Use color in a module\n.my-module {\n  color: $primary;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
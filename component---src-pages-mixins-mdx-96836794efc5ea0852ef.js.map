{"version":3,"sources":["webpack:///./src/pages/mixins.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","children","title","subline","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"iRAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAGIE,EAAY,SAAC,GAAD,IAChBC,EADgB,EAChBA,SADgB,OAEZ,cAAC,IAAD,CAAWC,MAAM,SAASC,QAAQ,0BACnCF,IAGU,SAASG,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,cAACN,EAAD,iBAAeD,EAAiBO,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,2HACA,mBAAQ,CACN,GAAM,oBACL,4BAAYC,WAAW,MAAvB,qBACH,8BAAW,4BAAYA,WAAW,KAAvB,oBAAX,wEACA,4CAAyB,4BAAYA,WAAW,KAAvB,WAAzB,qBAAkG,4BAAYA,WAAW,KAAvB,SAAlG,6CACA,wBACE,oBAAIA,WAAW,MAAK,4BAAYA,WAAW,MAAvB,UAApB,KAA6E,4BAAYA,WAAW,MAAvB,YAA7E,qCACA,oBAAIA,WAAW,MAAK,4BAAYA,WAAW,MAAvB,UAApB,KAA6E,4BAAYA,WAAW,MAAvB,YAA7E,sBACA,oBAAIA,WAAW,MAAK,4BAAYA,WAAW,MAAvB,YAApB,KAA+E,4BAAYA,WAAW,MAAvB,SAA/E,sFAEF,yCACA,wBACE,oBAAIA,WAAW,MAAK,4BAAYA,WAAW,MAAvB,SAApB,KAA4E,4BAAYA,WAAW,MAAvB,SAA5E,0FAAyN,4BAAYA,WAAW,MAAvB,YACzN,oBAAIA,WAAW,MAAK,4BAAYA,WAAW,MAAvB,YAApB,KAA+E,4BAAYA,WAAW,MAAvB,SAA/E,6FAA+N,4BAAYA,WAAW,MAAvB,gBAEjO,6EACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,kRAiBL,qCACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gMAgBL,mBAAQ,CACN,GAAM,SACL,4BAAYA,WAAW,MAAvB,YAKPJ,EAAWK,gBAAiB","file":"component---src-pages-mixins-mdx-96836794efc5ea0852ef.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport MdxLayout from 'components/mdx-layout';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <MdxLayout title=\"Mixins\" subline=\"Backbreeze Sass mixins\">\n    {children}\n  </MdxLayout>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Backbreeze is not a mixin library and therefor only provides two mixins intended for public use.`}</p>\n    <h2 {...{\n      \"id\": \"bb-utility-class\"\n    }}><inlineCode parentName=\"h2\">{`bb-utility-class`}</inlineCode></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`bb-utility-class`}</inlineCode>{` mixins is used under the hood to create all of Backbrezze' classes.`}</p>\n    <p>{`It takes a single `}<inlineCode parentName=\"p\">{`$config`}</inlineCode>{` argument of type `}<inlineCode parentName=\"p\">{`<Map>`}</inlineCode>{`. The config map has some mandatory keys:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`'name'`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`<String>`}</inlineCode>{` Defines the generated class name`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`'prop'`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`<String>`}</inlineCode>{` CSS property used`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`'values'`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`<Map>`}</inlineCode>{` Property values where each map key maps to the value name used in the class name`}</li>\n    </ul>\n    <p>{`Optional keys:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`'bps'`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`<Map>`}</inlineCode>{` If set this will generate a responsive utility classes. Typically this will be set to `}<inlineCode parentName=\"li\">{`$bb-bps`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`'pseudo'`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`<Map>`}</inlineCode>{` If set this will generate pseudo selector utility classes. Typically this will be set to `}<inlineCode parentName=\"li\">{`$bb-pseudo`}</inlineCode></li>\n    </ul>\n    <p>{`You can use it to create your own utility classes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// _animation-utility.scss\n\n@include bb-utility-class(\n  (\n    'name': 'anim',\n    'prop': 'animation-name',\n    'values': (\n      'spin': spin,\n      'pulse': pulse,\n      'none': none,\n    ),\n    'bps': $bb-bps // <- Use the general breakpoints,\n  )\n);\n`}</code></pre>\n    <p>{`Will yield`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.anim-spin {\n  animation-name: spin;\n}\n\n.anim-pulse {\n  animation-name: pulse;\n}\n\n.anim-none {\n  animation-name: none;\n}\n\n/* + responsive versions (not shown for brevity) */\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"bb-mq\"\n    }}><inlineCode parentName=\"h2\">{`$bb-mq`}</inlineCode></h2>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}